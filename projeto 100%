const dados = require("prompt-sync")();
const { initializeApp } = require("firebase/app");
const { getFirestore, collection, addDoc, getDocs, orderBy, query } = require("firebase/firestore");

const firebaseConfig = {
  apiKey: "AIzaSyDFutmHYhkz0Tb9yb--dCSLHnJXOECPW_Q",
  authDomain: "projeto-35d67.firebaseapp.com",
  projectId: "projeto-35d67",
  storageBucket: "projeto-35d67.appspot.com",
  messagingSenderId: "440367551980",
  appId: "1:440367551980:web:f39b406ccbdd4333711cc9",
  measurementId: "G-39ZD323S0M",
};

const app = initializeApp(firebaseConfig);
const db = getFirestore(app);
const scoresRef = collection(db, "scores");
//recebe pontos tbm, esse db ja veio da confi do firebase

 const palavras = [
 "casa", "livro", "amigo", "feliz", "carro", "computador", "elefante", "janela",
 "escola", "professor", "lousa", "cadeira", "telefone", "estudante", "teclado",
 "mouse", "programador", "c√≥digo", "piscina", "praia", "montanha", "chuva",
  "sol", "lua", "planeta", "gal√°xia", "estrela", "universo", "cidade",
 "bairro", "rua", "avenida", "mercado", "restaurante", "biblioteca",
  "livraria", "farm√°cia", "hospital", "m√©dico", "enfermeiro", "cirurgi√£o",
"advogado", "engenheiro", "arquiteto", "astronauta", "cientista", "bi√≥logo",
"f√≠sico", "qu√≠mico", "matem√°tico", "historiador", "fil√≥sofo", "antrop√≥logo"
];
//fonte de palavras: open AI

let ps = palavras[Math.floor(Math.random() * palavras.length)];

const nomeUsuario = dados("digite seu nick: ");
//pra nao trabalha somente com o nome 
console.log("A palavra tem", ps.length, "letras.");

let opcao = parseInt(dados("escolha uma op√ß√£o:\n1. Jogo com chances\n2. jogo at√© acertar\nDigite: "));
//√© pra fun√ß√£o ta ligada ao banco de dados
async function game(ps, opcao) {
  let c = 1;
  let pontos = 0;

  if (opcao === 1) {
    let tt = parseInt(dados("informe quantas tentativas voc√™ quer: "));
    while (c <= tt) {
      let p = dados("informe a palavra: ").toLowerCase().trim();
      if (p === ps) {
        console.log("‚úÖ VOC√ä ACERTOU na tentativa", c, "!");
        pontos = tt - c + 1;
        break;
      } else {
        mostrarDicas(p, ps);
      }
      c++;
    }
  } else if (opcao === 2) {
    while (true) {
      let p = dados("informe a palavra: ").toLowerCase().trim();
      if (p === ps) {
        console.log("‚úÖ VOC√ä ACERTOU na tentativa", c, "!");
        pontos = 10 - c;
        break;
      } else {
        mostrarDicas(p, ps);
      }
      c++;
    }
  } else {
    console.log("op√ß√£o inv√°lida.");
  }

  try {
    await addDoc(scoresRef, {
      nome: nomeUsuario,
      pontos: pontos,
      data: new Date(),
      //vai adiconar a ponte√ß√£o a tabela de banco de dadso
    });
    console.log("pontua√ß√£o registrada!");
    await exibirTabelaPontos();
  } catch (error) {
    console.error("erro ao salvar pontua√ß√£o:", error);
  }
}

function mostrarDicas(palpite, palavraSecreta) {
  let dicas = "";

  for (let i = 0; i < palavraSecreta.length; i++) {
    if (palpite[i] === palavraSecreta[i]) {
      dicas += "üü© " + palpite[i] + " ";
    } else if (palavraSecreta.includes(palpite[i])) {
      dicas += "üü® " + palpite[i] + " ";
    } else {
      dicas += "‚¨õ _ ";
      //surpreendemente, deu certo
    }
  }

  console.log("dica:", dicas.trim());
  //ain tem x letras, essa boiolage ai nao aguento mais
}



game(ps, opcao);


/* TIRAR A PORCARIA DO BANCO DE DADOS PQ TA DANDO ERRO E NAO SABO MAIS OQ FAZEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE */
// usar sequelize
